"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/login/page",{

/***/ "(app-pages-browser)/./src/state/api/authApi.ts":
/*!**********************************!*\
  !*** ./src/state/api/authApi.ts ***!
  \**********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useGetCurrentUserQuery: () => (/* binding */ useGetCurrentUserQuery),\n/* harmony export */   useHandleGoogleCallbackMutation: () => (/* binding */ useHandleGoogleCallbackMutation),\n/* harmony export */   useInitiateGoogleAuthQuery: () => (/* binding */ useInitiateGoogleAuthQuery),\n/* harmony export */   useLoginMutation: () => (/* binding */ useLoginMutation),\n/* harmony export */   useRegisterMutation: () => (/* binding */ useRegisterMutation),\n/* harmony export */   useUpdateUserMutation: () => (/* binding */ useUpdateUserMutation),\n/* harmony export */   userApi: () => (/* binding */ userApi)\n/* harmony export */ });\n/* harmony import */ var _baseApi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./baseApi */ \"(app-pages-browser)/./src/state/api/baseApi.ts\");\n\nconst userApi = _baseApi__WEBPACK_IMPORTED_MODULE_0__.baseApi.injectEndpoints({\n    endpoints: (build)=>({\n            login: build.mutation({\n                query: (credentials)=>({\n                        url: \"/auth/login\",\n                        method: \"POST\",\n                        body: credentials\n                    })\n            }),\n            register: build.mutation({\n                query: (credentials)=>({\n                        url: \"/auth/register\",\n                        method: \"POST\",\n                        body: credentials\n                    })\n            }),\n            getCurrentUser: build.query({\n                query: ()=>\"/profile\",\n                providesTags: [\n                    \"Auth\"\n                ]\n            }),\n            updateUser: build.mutation({\n                query: (userUpdate)=>({\n                        url: \"/profile\",\n                        method: \"PATCH\",\n                        body: userUpdate\n                    }),\n                invalidatesTags: [\n                    \"Auth\"\n                ]\n            }),\n            initiateGoogleAuth: build.query({\n                query: ()=>\"/auth/google\"\n            }),\n            handleGoogleCallback: build.mutation({\n                query: (code)=>({\n                        url: \"/auth/google/callback?code=\".concat(code),\n                        method: \"GET\"\n                    })\n            }),\n            logout: build.mutation({\n                query: ()=>({\n                        url: \"/auth/logout\",\n                        method: \"POST\"\n                    })\n            })\n        })\n});\nconst { useLoginMutation, useRegisterMutation, useGetCurrentUserQuery, useUpdateUserMutation, useInitiateGoogleAuthQuery, useHandleGoogleCallbackMutation } = userApi;\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9zdGF0ZS9hcGkvYXV0aEFwaS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFvQztBQUc3QixNQUFNQyxVQUFVRCw2Q0FBT0EsQ0FBQ0UsZUFBZSxDQUFDO0lBQzdDQyxXQUFXLENBQUNDLFFBQVc7WUFDckJDLE9BQU9ELE1BQU1FLFFBQVEsQ0FBaUQ7Z0JBQ3BFQyxPQUFPLENBQUNDLGNBQWlCO3dCQUN2QkMsS0FBSzt3QkFDTEMsUUFBUTt3QkFDUkMsTUFBTUg7b0JBQ1I7WUFDRjtZQUVBSSxVQUFVUixNQUFNRSxRQUFRLENBQWlEO2dCQUN2RUMsT0FBTyxDQUFDQyxjQUFpQjt3QkFDdkJDLEtBQUs7d0JBQ0xDLFFBQVE7d0JBQ1JDLE1BQU1IO29CQUNSO1lBQ0Y7WUFFQUssZ0JBQWdCVCxNQUFNRyxLQUFLLENBQWE7Z0JBQ3RDQSxPQUFPLElBQU07Z0JBQ2JPLGNBQWM7b0JBQUM7aUJBQU87WUFDeEI7WUFFQUMsWUFBWVgsTUFBTUUsUUFBUSxDQUFzQjtnQkFDOUNDLE9BQU8sQ0FBQ1MsYUFBZ0I7d0JBQ3RCUCxLQUFLO3dCQUNMQyxRQUFRO3dCQUNSQyxNQUFNSztvQkFDUjtnQkFDQUMsaUJBQWlCO29CQUFDO2lCQUFPO1lBQzNCO1lBRUFDLG9CQUFvQmQsTUFBTUcsS0FBSyxDQUF3QjtnQkFDckRBLE9BQU8sSUFBTTtZQUNmO1lBRUFZLHNCQUFzQmYsTUFBTUUsUUFBUSxDQUF3QztnQkFDMUVDLE9BQU8sQ0FBQ2EsT0FBVTt3QkFDaEJYLEtBQUssOEJBQW1DLE9BQUxXO3dCQUNuQ1YsUUFBUTtvQkFDVjtZQUNGO1lBRUFXLFFBQVFqQixNQUFNRSxRQUFRLENBQTRCO2dCQUNoREMsT0FBTyxJQUFPO3dCQUNaRSxLQUFLO3dCQUNMQyxRQUFRO29CQUNWO1lBQ0Y7UUFDRjtBQUNGLEdBQUc7QUFFSSxNQUFNLEVBQ1hZLGdCQUFnQixFQUNoQkMsbUJBQW1CLEVBQ25CQyxzQkFBc0IsRUFDdEJDLHFCQUFxQixFQUNyQkMsMEJBQTBCLEVBQzFCQywrQkFBK0IsRUFDaEMsR0FBRzFCLFFBQVEiLCJzb3VyY2VzIjpbIi9Vc2Vycy9lZmUvRGVza3RvcC9Db2RlL25leHRfZGFzaGJvYXJkL2NsaWVudC9zcmMvc3RhdGUvYXBpL2F1dGhBcGkudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYmFzZUFwaSB9IGZyb20gXCIuL2Jhc2VBcGlcIjtcclxuaW1wb3J0IHsgVXNlciwgVXNlckNyZWRlbnRpYWxzIH0gZnJvbSBcIi4uL3R5cGVzXCI7XHJcblxyXG5leHBvcnQgY29uc3QgdXNlckFwaSA9IGJhc2VBcGkuaW5qZWN0RW5kcG9pbnRzKHtcclxuICBlbmRwb2ludHM6IChidWlsZCkgPT4gKHtcclxuICAgIGxvZ2luOiBidWlsZC5tdXRhdGlvbjx7IHRva2VuOiBzdHJpbmc7IHVzZXI6IFVzZXIgfSwgVXNlckNyZWRlbnRpYWxzPih7XHJcbiAgICAgIHF1ZXJ5OiAoY3JlZGVudGlhbHMpID0+ICh7XHJcbiAgICAgICAgdXJsOiBcIi9hdXRoL2xvZ2luXCIsXHJcbiAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcclxuICAgICAgICBib2R5OiBjcmVkZW50aWFscyxcclxuICAgICAgfSksXHJcbiAgICB9KSxcclxuXHJcbiAgICByZWdpc3RlcjogYnVpbGQubXV0YXRpb248eyB0b2tlbjogc3RyaW5nOyB1c2VyOiBVc2VyIH0sIFVzZXJDcmVkZW50aWFscz4oe1xyXG4gICAgICBxdWVyeTogKGNyZWRlbnRpYWxzKSA9PiAoe1xyXG4gICAgICAgIHVybDogXCIvYXV0aC9yZWdpc3RlclwiLFxyXG4gICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcbiAgICAgICAgYm9keTogY3JlZGVudGlhbHMsXHJcbiAgICAgIH0pLFxyXG4gICAgfSksXHJcblxyXG4gICAgZ2V0Q3VycmVudFVzZXI6IGJ1aWxkLnF1ZXJ5PFVzZXIsIHZvaWQ+KHtcclxuICAgICAgcXVlcnk6ICgpID0+IFwiL3Byb2ZpbGVcIixcclxuICAgICAgcHJvdmlkZXNUYWdzOiBbXCJBdXRoXCJdLFxyXG4gICAgfSksXHJcblxyXG4gICAgdXBkYXRlVXNlcjogYnVpbGQubXV0YXRpb248VXNlciwgUGFydGlhbDxVc2VyPj4oe1xyXG4gICAgICBxdWVyeTogKHVzZXJVcGRhdGUpID0+ICh7XHJcbiAgICAgICAgdXJsOiBcIi9wcm9maWxlXCIsXHJcbiAgICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXHJcbiAgICAgICAgYm9keTogdXNlclVwZGF0ZSxcclxuICAgICAgfSksXHJcbiAgICAgIGludmFsaWRhdGVzVGFnczogW1wiQXV0aFwiXSxcclxuICAgIH0pLFxyXG5cclxuICAgIGluaXRpYXRlR29vZ2xlQXV0aDogYnVpbGQucXVlcnk8eyB1cmw6IHN0cmluZyB9LCB2b2lkPih7XHJcbiAgICAgIHF1ZXJ5OiAoKSA9PiBcIi9hdXRoL2dvb2dsZVwiLFxyXG4gICAgfSksXHJcblxyXG4gICAgaGFuZGxlR29vZ2xlQ2FsbGJhY2s6IGJ1aWxkLm11dGF0aW9uPHsgdG9rZW46IHN0cmluZzsgdXNlcjogVXNlciB9LCBzdHJpbmc+KHtcclxuICAgICAgcXVlcnk6IChjb2RlKSA9PiAoe1xyXG4gICAgICAgIHVybDogYC9hdXRoL2dvb2dsZS9jYWxsYmFjaz9jb2RlPSR7Y29kZX1gLFxyXG4gICAgICAgIG1ldGhvZDogXCJHRVRcIixcclxuICAgICAgfSksXHJcbiAgICB9KSxcclxuXHJcbiAgICBsb2dvdXQ6IGJ1aWxkLm11dGF0aW9uPHsgbWVzc2FnZTogc3RyaW5nIH0sIHZvaWQ+KHtcclxuICAgICAgcXVlcnk6ICgpID0+ICh7XHJcbiAgICAgICAgdXJsOiBcIi9hdXRoL2xvZ291dFwiLFxyXG4gICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcbiAgICAgIH0pLFxyXG4gICAgfSksXHJcbiAgfSksXHJcbn0pO1xyXG5cclxuZXhwb3J0IGNvbnN0IHtcclxuICB1c2VMb2dpbk11dGF0aW9uLFxyXG4gIHVzZVJlZ2lzdGVyTXV0YXRpb24sXHJcbiAgdXNlR2V0Q3VycmVudFVzZXJRdWVyeSxcclxuICB1c2VVcGRhdGVVc2VyTXV0YXRpb24sXHJcbiAgdXNlSW5pdGlhdGVHb29nbGVBdXRoUXVlcnksXHJcbiAgdXNlSGFuZGxlR29vZ2xlQ2FsbGJhY2tNdXRhdGlvbixcclxufSA9IHVzZXJBcGk7XHJcbiJdLCJuYW1lcyI6WyJiYXNlQXBpIiwidXNlckFwaSIsImluamVjdEVuZHBvaW50cyIsImVuZHBvaW50cyIsImJ1aWxkIiwibG9naW4iLCJtdXRhdGlvbiIsInF1ZXJ5IiwiY3JlZGVudGlhbHMiLCJ1cmwiLCJtZXRob2QiLCJib2R5IiwicmVnaXN0ZXIiLCJnZXRDdXJyZW50VXNlciIsInByb3ZpZGVzVGFncyIsInVwZGF0ZVVzZXIiLCJ1c2VyVXBkYXRlIiwiaW52YWxpZGF0ZXNUYWdzIiwiaW5pdGlhdGVHb29nbGVBdXRoIiwiaGFuZGxlR29vZ2xlQ2FsbGJhY2siLCJjb2RlIiwibG9nb3V0IiwidXNlTG9naW5NdXRhdGlvbiIsInVzZVJlZ2lzdGVyTXV0YXRpb24iLCJ1c2VHZXRDdXJyZW50VXNlclF1ZXJ5IiwidXNlVXBkYXRlVXNlck11dGF0aW9uIiwidXNlSW5pdGlhdGVHb29nbGVBdXRoUXVlcnkiLCJ1c2VIYW5kbGVHb29nbGVDYWxsYmFja011dGF0aW9uIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/state/api/authApi.ts\n"));

/***/ })

});